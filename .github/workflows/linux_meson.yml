name: Test Meson build (Linux)

on:
  pull_request:
    branches:
      - main
      - maintenance/**

defaults:
  run:
    shell: bash

env:
  PYTHON_VERSION: 3.11

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  meson_spin:
    if: "github.repository == 'numpy/numpy'"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        USE_NIGHTLY_OPENBLAS: [false, true]
    env:
      USE_NIGHTLY_OPENBLAS: ${{ matrix.USE_NIGHTLY_OPENBLAS }}
    name: "Test Linux (${{ matrix.USE_NIGHTLY_OPENBLAS && 'nightly' || 'stable' }} OpenBLAS)"
    steps:
    - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      with:
        submodules: recursive
        fetch-depth: 0
    - uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1 # v4.7.0
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Install dependencies
      run: |
        pip install -r build_requirements.txt
        # Install OpenBLAS
        set -xe
        if [[ $USE_NIGHTLY_OPENBLAS == "true" ]]; then
          target=$(python tools/openblas_support.py --nightly)
        else
          target=$(python tools/openblas_support.py)
        fi
        sudo cp -r $target/lib/* /usr/lib
        sudo cp $target/include/* /usr/include
    - name: Build
      shell: 'script -q -e -c "bash --noprofile --norc -eo pipefail {0}"'
      env:
        TERM: xterm-256color
      run:
        spin build -- --werror
    - name: Check build-internal dependencies
      run:
        ninja -C build -t missingdeps
    - name: Check installed test and stub files
      run:
        python tools/check_installed_files.py $(find ./build-install -path '*/site-packages/numpy')
    - name: Test
      shell: 'script -q -e -c "bash --noprofile --norc -eo pipefail {0}"'
      env:
        TERM: xterm-256color
        LD_LIBRARY_PATH: "/usr/local/lib/"  # to find libopenblas.so.0
      run: |
        pip install pytest pytest-xdist hypothesis typing_extensions
        spin test -j auto
