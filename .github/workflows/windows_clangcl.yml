name: Test Clang-CL Build (Windows)

on:
  pull_request:
    branches:
      - main
      - maintenance/**

env:
  PYTHON_VERSION: 3.11

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  meson:
    name: Meson windows build/test
    runs-on: windows-2019
    if: "github.repository == 'numpy/numpy'"
    steps:
    - name: Checkout
      uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3.5.3
      with:
        submodules: recursive
        fetch-depth: 0
    - name: Setup Python
      uses: actions/setup-python@61a6322f88396a6271a6ee3565807d608ecaddd1 # v4.7.0
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install build dependencies from PyPI
      run: |
        pip install spin Cython

    - name: Install OpenBLAS and Clang-cl
      run: |
        # Download and install pre-built OpenBLAS library with 32-bit
        # interfaces Unpack it in the pkg-config hardcoded path
        choco install unzip -y
        choco install wget -y
        # Install llvm, which contains clang-cl
        choco install llvm -y --version=16.0.6 
        choco install -y --checksum 6004DF17818F5A6DBF19CB335CC92702 pkgconfiglite
        wget https://anaconda.org/multibuild-wheels-staging/openblas-libs/v0.3.21/download/openblas-v0.3.21-win_amd64-gcc_10_3_0.zip
        unzip -d c:\opt openblas-v0.3.21-win_amd64-gcc_10_3_0.zip
        echo "PKG_CONFIG_PATH=c:\opt\64\lib\pkgconfig;" >> $env:GITHUB_ENV

    - name: Write native file for Clang-cl binaries
      run: |
        # TODO: this job is identical to the one in `windows_meson.yml` aside
        # from installing Clang-cl and usage of this .ini file. So merge the
        # two and use a matrix'ed CI job run.
        "[binaries]","c = 'clang-cl'","cpp = 'clang-cl'","ar = 'llvm-lib'","c_ld = 'lld-link'","cpp_ld = 'lld-link'" | Out-File $PWD/clang-cl-build.ini -Encoding ascii

    - name: Install NumPy
      run: |
        spin build -j2 -- --vsenv --native-file=$PWD/clang-cl-build.ini

    - name: Copy OpenBLAS DLL, write _distributor_init.py
      run: |
        # Getting the OpenBLAS DLL to the right place so it loads
        $installed_path = "$PWD\build-install\usr\Lib\site-packages"
        $numpy_path = "${installed_path}\numpy"
        $libs_path = "${numpy_path}\.libs"
        mkdir ${libs_path}
        $ob_path = "C:/opt/64/bin/"
        cp $ob_path/*.dll $libs_path
        # Write _distributor_init.py to load .libs DLLs.
        python -c "from tools import openblas_support; openblas_support.make_init(r'${numpy_path}')"

    - name: Install test dependencies
      run: |
        python -m pip install -r test_requirements.txt
        python -m pip install threadpoolctl

    - name: Run test suite
      run: |
        spin test
