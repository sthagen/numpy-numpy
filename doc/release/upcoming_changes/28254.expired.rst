* Remove deprecated macros like ``NPY_OWNDATA`` from cython interfaces in favor of ``NPY_ARRAY_OWNDATA`` (deprecated since 1.7)
* Remove ``numpy/npy_1_7_deprecated_api.h`` and C macros like ``NPY_OWNDATA`` in favor of ``NPY_ARRAY_OWNDATA`` (deprecated since 1.7)
* Remove alias ``generate_divbyzero_error`` to ``npy_set_floatstatus_divbyzero`` and ``generate_overflow_error`` to ``npy_set_floatstatus_overflow`` (deprecated since 1.10)
* Remove ``np.tostring`` (deprecated since 1.19)
* Raise on ``np.conjugate`` of non-numeric types (deprecated since 1.13)
* Raise when using ``np.bincount(...minlength=None)``, use 0 intead (deprecated since 1.14)
* Passing ``shape=None`` to functions with a non-optional shape argument errors, use ``()`` instead (deprecated since 1.20)
* Inexact matches for ``mode`` and ``searchside`` raise (deprecated since 1.20)
* Setting ``__array_finalize__ = None`` errors (deprecated since 1.23)
* ``np.fromfile`` and ``np.fromstring`` error on bad data, previously they would guess (deprecated since 1.18)
* ``datetime64`` and ``timedelta64`` construction with a tuple no longer accepts an ``event`` value, either use a two-tuple of (unit, num) or a 4-tuple of (unit, num, den, 1) (deprecated since 1.14)
* When constructing a ``dtype`` from a class with a ``dtype`` attribute, that attribute must be a dtype-instance rather than a thing that can be parsed as a dtype instance (deprecated in 1.19). At some point the whole construct of using a dtype attribute will be deprecated (see #25306)
* Passing booleans as partition index errors (deprecated since 1.23)
* Out-of-bounds indexes error even on empty arrays (deprecated since 1.20)
* ``np.tostring`` has been removed, use ``tobytes`` instead (deprecated since 1.19)
* Disallow make a non-writeable array writeable for arrays with a base that do not own their data (deprecated since 1.17)
* ``concatenate()`` with ``axis=None`` uses ``same-kind`` casting by default, not ``unsafe`` (deprecated since 1.20)
* Unpickling a scalar with object dtype errors (deprecated since 1.20)
* The binary mode of ``fromstring`` now errors, use ``frombuffer`` instead (deprecated since 1.14)
* Converting ``np.inexact`` or ``np.floating`` to a dtype errors (deprecated since 1.19)
* Converting ``np.complex``, ``np.integer``, ``np.signedinteger``, ``np.unsignedinteger``, ``np.generic`` to a dtype errors (deprecated since 1.19)
* The Python built-in ``round`` errors for complex scalars. Use ``np.round`` or ``scalar.round`` instead (deprecated since 1.19)
* 'np.bool' scalars can no longer be interpreted as an index (deprecated since 1.19)
* Parsing an integer via a float string is no longer supported. (deprecated since 1.23) To avoid this error you can
  * make sure the original data is stored as integers.
  * use the ``converters=float`` keyword argument.
  * Use ``np.loadtxt(...).astype(np.int64)``
* The use of a length 1 tuple for the ufunc ``signature`` errors. Use ``dtype`` or  fill the tuple with ``None`` (deprecated since 1.19)
* Special handling of matrix is in np.outer is removed. Convert to a ndarray via ``matrix.A`` (deprecated since 1.20)
